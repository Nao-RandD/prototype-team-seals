#usda 1.0
(
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Firebase_transform", "Camp_____Tree", "Camp_Cycling_Big", "Camp_Cooler_Box", "Camp_Chair_1", "Camp_Chair_2", "Camp_Meal", "Camp_Tent", "Cylinder", "SoundTimeline", "se3_firework_mp3", "BGM_1_mp3", "RCP_BehaviorsContainer", "OnAddedToScene", "ChannelAudio"]
    def Cylinder "Cylinder" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/Cylinder/DefaultMaterial>
        double radius = 0.1
        float3 xformOp:scale = (3, 0.1, 3)
        float3 xformOp:translate = (0, -0.01, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Material "DefaultMaterial"
        {
            token inputs:frame:stPrimvarName = "st" (
                customData = {
                    dictionary realitykit = {
                        bool hide = 1
                    }
                }
            )
            token outputs:mtlx:surface
            token outputs:realitykit:vertex
            prepend token outputs:surface.connect = </Root/Cylinder/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                color3f inputs:diffuseColor.connect = </Root/Cylinder/DefaultMaterial/diffuseColor.outputs:rgb>
                float inputs:roughness = 0.75
                token outputs:surface
            }

            def Shader "diffuseColor"
            {
                uniform token info:id = "UsdUVTexture"
                asset inputs:file = @ground-texture.jpeg@
                float2 inputs:st.connect = </Root/Cylinder/DefaultMaterial/diffuseColor/TexCoordReader.outputs:result>
                color3f outputs:rgb

                def Shader "TexCoordReader"
                {
                    uniform token info:id = "UsdPrimvarReader_float2"
                    token inputs:varname.connect = </Root/Cylinder/DefaultMaterial.inputs:frame:stPrimvarName>
                    float2 outputs:result
                }
            }
        }

        def RealityKitComponent "ChannelAudio"
        {
            float gain = -7.4522767
            uniform token info:id = "RealityKit.ChannelAudio"
        }

        def RealityKitComponent "AudioLibrary"
        {
            uniform token info:id = "RealityKit.AudioLibrary"

            def RealityKitDict "resources"
            {
                string[] keys = ["BGM-1.mp3"]
                rel values = </Root/BGM_1_mp3>
            }
        }
    }

    def "Camp_Tent" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 3.1415927, 0)
        }
        references = @Camp_Tent.usdz@
    )
    {
        quatf xformOp:orient = (-4.371139e-8, 0, 1, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0, 5.075708e-8, 0.18)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "geometry_4682_001" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (2.2470007, 1.2955035, 2.0480008)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.013494313, 0.63638, -0.018732846)
                }
            }
        }
    }

    def "Camp_Meal" (
        active = true
        customData = {
            float3 rotationEulerHint = (-4.1023203e-15, -0.52359885, -8.429369e-8)
        }
        references = @Camp Meal.usdz@
    )
    {
        quatf xformOp:orient = (0.9659258, -1.09084075e-8, -0.25881904, -4.0710724e-8)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.12510276, 6.984919e-8, -0.14657386)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "CampTool_002" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.9000001, 0.76013684, 0.7000002)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.0144661665, 0.3830765, 0.04274726)
                }
            }
        }
    }

    def "Camp_Chair_2" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 1.2217305, -4.214683e-8)
        }
        references = @Camp_Chair_2.usdz@
    )
    {
        quatf xformOp:orient = (0.81915206, 1.2087215e-8, 0.5735764, -1.7262332e-8)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.018766612, 1.4901161e-8, -0.019024888)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "CampTool_003" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            bool allowsDirectInput = 0
            bool allowsIndirectInput = 1
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.7600002, 0.89, 0.73000026)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.02228111, 0.44829047, -0.000008434057)
                }
            }
        }
    }

    def "Camp_Chair_1" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -1.5707963, 0)
        }
        references = @Camp_Chair_1.usdz@
    )
    {
        quatf xformOp:orient = (0.70710677, 0, -0.70710677, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0.12, 0, -0.1)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "CampTool_001" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (1.0794389, 0.8699998, 0.53212106)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.14000706, 0.43792376, 0.010489956)
                }
            }
        }
    }

    def "Camp_Cooler_Box" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, 0.69813174, 0)
        }
        references = @Camp Cooler Box.usdz@
    )
    {
        quatf xformOp:orient = (0.9396926, 0, 0.34202012, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0.14447848, 1.5133992e-8, -0.20547487)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "CampTool_007" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.50999993, 0.44000027, 0.93461394)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.013678372, 0.22077198, -0.012143061)
                }
            }
        }
    }

    def "Camp_Cycling_Big" (
        active = true
        customData = {
            float3 rotationEulerHint = (0, -0.78539807, 0)
        }
        references = @Camp Cycling Big.usdz@
    )
    {
        quatf xformOp:orient = (0.92387956, 0, -0.3826834, 0)
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (-0.17795287, 2.4214387e-8, 0.059407994)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "CampTool_009" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.48000008, 1.0300002, 1.730001)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-0.013696142, 0.52132165, -0.100375056)
                }
            }
        }
    }

    def "Camp_____Tree" (
        active = true
        references = @Campモデル Tree.usdz@
    )
    {
        float3 xformOp:scale = (0.1, 0.1, 0.1)
        float3 xformOp:translate = (0.17186469, 1.3969839e-8, 0.047131356)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "_400_primitive" (
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Xform "Firebase_transform" (
        active = true
    )
    {
        reorder nameChildren = ["se3_firework_mp3", "Camp_____10fps", "InputTarget", "Collider"]
        float3 xformOp:translate = (0, 0, -0.11928862)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def "Camp_____10fps" (
            active = true
            customData = {
                float3 rotationEulerHint = (-1.5707964, 0, 0)
            }
            references = @Camp Fire 10fps (1).usdz@
        )
        {
            quatf xformOp:orient = (0.70710677, -0.70710677, 0, 0)
            float3 xformOp:scale = (0.1, 0.1, 0.1)
            float3 xformOp:translate = (-9.778887e-9, -7.450581e-9, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Object_5" (
                customData = {
                    float3 rotationEulerHint = (-4.7123885, 0, 0)
                }
            )
            {
                quatf xformOp:orient = (0.70710677, 0.70710677, 0, 0)
                float3 xformOp:scale = (0.012423359, 0.0124233635, 0.0124233635)
                double3 xformOp:translate = (0, -0.025398720055818558, 3.4125424708264518e-9)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def RealityKitComponent "AnimationLibrary"
            {
                token info:id = "RealityKit.AnimationLibrary"
            }

            def RealityKitComponent "AudioLibrary"
            {
                uniform token info:id = "RealityKit.AudioLibrary"

                def RealityKitDict "resources"
                {
                    string[] keys = ["se3_firework.mp3"]
                    rel values = </Root/se3_firework_mp32>
                }
            }

            def RealityKitComponent "SpatialAudio"
            {
                float directLevel = -4.117491
                float gain = -13.087455
                uniform token info:id = "RealityKit.SpatialAudio"
                float reverbLevel = -16.682722
            }
        }

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.086172976, 0.10942629, 0.061884183)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                    float3 position = (-1.4901161e-8, 0.051262632, 0.0050797444)
                }
            }
        }

        def RealityKitComponent "AnimationLibrary"
        {
            token info:id = "RealityKit.AnimationLibrary"

            def RealityKitAnimationFile "default_subtree_animation"
            {
                uniform bool looping = 1
                uniform string name = "default subtree animation"
            }
        }
    }

    def RealityKitTimeline "SoundTimeline"
    {
        reorder nameChildren = ["Track", "Track2", "Track3"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Animation"
            {
                string actionKind = "animation"
                string animation = "default subtree animation"
                int blendLayer = 500
                double duration = 5.5
                uniform token info:id = "82B7D0A4-7118-45B7-B5EE-88479669C98D"
                double loopCount = 0
                bool separateAnimatedValue = 1
                double startTime = 0
                rel target = </Root/Firebase_transform>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track2"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "se3_firework.mp3"
                bool controlPlayback = 1
                double duration = 60.09341666666667
                uniform token info:id = "8BE3CECD-CC9D-430D-B237-F19D121BA3F9"
                double loopCount = 0
                double startTime = 0.0011630696441249557
                rel target = </Root/Firebase_transform/Camp_____10fps>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }

        def RealityKitTrack "Track3"
        {
            def RealityKitAction "Play_Audio"
            {
                string actionKind = "audio"
                string audioResourceName = "BGM-1.mp3"
                bool controlPlayback = 1
                double duration = 114.5088125
                uniform token info:id = "79A19221-244F-4139-9CB8-ABC59627983B"
                double loopCount = 0
                double startTime = 0
                rel target = </Root/Cylinder>

                def RealityKitStruct "handoffType"
                {
                }
            }
        }
    }

    def RealityKitComponent "RCP_BehaviorsContainer"
    {
        rel behaviors = </Root/OnAddedToScene>
        uniform token info:id = "RCP.BehaviorsContainer"
    }

    def Preliminary_Behavior "OnAddedToScene"
    {
        rel actions = </Root/OnAddedToScene/Action>
        uniform bool exclusive
        rel triggers = </Root/OnAddedToScene/Trigger>

        def Preliminary_Trigger "Trigger"
        {
            rel affectedObjects = </Root>
            token info:id = "SceneTransition"
        }

        def Preliminary_Action "Action"
        {
            rel affectedObjects = </Root>
            rel animationLibraryKey = </Root/SoundTimeline>
            rel animationLibraryKeyOverrideKey = </Root/OnAddedToScene/Trigger>
            token info:id = "PlayTimeline"
            int loops = 0
            int performCount = 1
            token type = "serial"
        }
    }

    def RealityKitAudioFile "se3_firework_mp32"
    {
        uniform asset file = @se3_firework.mp3@
        uniform bool shouldLoop = 1
    }

    def RealityKitAudioFile "BGM_1_mp3"
    {
        uniform asset file = @BGM-1.mp3@
        uniform bool shouldLoop = 1
    }
}

